syntax = "proto3";

package pg.service.user;

option go_package = "proto/user";

service UserService {
  rpc Get (GetRequest) returns (UserResponse){}
  rpc Create (CreateRequest) returns (UserResponse){}
  rpc Update(UpdateRequest) returns (UserResponse) {}
  rpc Delete(DeleteRequest) returns (UserResponse) {}
  rpc Auth(AuthRequest) returns(TokenResponse){}
  rpc ValidateToken(TokenRequest) returns(TokenResponse){}
  rpc Pagination(PaginationRequest) returns(PaginationResponse){}
  rpc CreatePasswordReset(CreatePasswordResetRequest) returns(PasswordResetResponse){}
  rpc ResetPassword(ResetPasswordRequest) returns(ResetPasswordResponse){}
}

message User{
  uint64 id = 1;
  string password = 2;
  string name = 3;
  string email = 4;
  string phone = 5;
  string real_name = 6;
  string avatar = 7;
  uint32 status = 8;
  string create_at = 9;
  string update_at = 10;
}

message GetRequest{
  uint64 id = 1;
}

message CreateRequest{
  string password = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
  string real_name = 5;
  string avatar = 6;
}

message UpdateRequest{
  uint64 id = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
  string real_name = 5;
  string avatar = 6;
}

message DeleteRequest{
  uint64 id = 1;
}

message UserResponse{
  User user = 1;
}

message AuthRequest{
  string email = 1;
  string password = 2;
}

message TokenRequest{
  string token = 1;
}
message TokenResponse{
  string token = 1;
  bool valid = 2;
}

message PaginationRequest{
  uint64 page = 1;
  uint32 perPage = 2;
}

message PaginationResponse{
  repeated User users = 1;
  uint64 total = 2;
}

message PasswordReset{
  uint64 id = 1;
  string email = 2;
  string token = 3;
  string create_at = 4;
}

message CreatePasswordResetRequest{
  string email = 1;
}

message PasswordResetResponse{
  PasswordReset passwordReset = 1;
}

message ResetPasswordRequest{
  string token = 1 ;
}

message ResetPasswordResponse{
  bool resetSuccess = 1;
  string newPassword = 2;
}