# docker-compose.ym
version: '3.3'

services:
  pg-micro-api:
    container_name: pg-micro-api
    image: micro/micro:v2.9.3
    ports:
      - 8080:8080
    environment:
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
    command: api --handler=rpc --namespace=pg --type=service --enable_rpc
    networks:
      - pg-network

  pg-micro-web:
    container_name: pg-micro-web
    image: micro/micro:v2.9.3
    ports:
      - 8082:8082
    environment:
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
    command: web
    networks:
      - pg-network

  etcd1:
    image: bitnami/etcd:latest
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_NAME: "etcd1"
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://etcd1:2380"
      ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd1:2379"
      ETCD_INITIAL_CLUSTER_TOKEN: "etcd-cluster"
      ETCD_INITIAL_CLUSTER: "etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380"
      ETCD_INITIAL_CLUSTER_STATE: "new"
    ports:
      - 23791:2379
      - 23801:2380
    networks:
      - pg-network

  etcd2:
    image: bitnami/etcd:latest
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_NAME: "etcd2"
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://etcd2:2380"
      ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd2:2379"
      ETCD_INITIAL_CLUSTER_TOKEN: "etcd-cluster"
      ETCD_INITIAL_CLUSTER: "etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380"
      ETCD_INITIAL_CLUSTER_STATE: "new"
    ports:
      - 23792:2379
      - 23802:2380
    networks:
      - pg-network

  etcd3:
    image: bitnami/etcd:latest
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_NAME: "etcd3"
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://etcd3:2380"
      ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd3:2379"
      ETCD_INITIAL_CLUSTER_TOKEN: "etcd-cluster"
      ETCD_INITIAL_CLUSTER: "etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380"
      ETCD_INITIAL_CLUSTER_STATE: "new"
    ports:
      - 23793:2379
      - 23803:2380
    networks:
      - pg-network

  e3w:
    image: soyking/e3w:latest
    ports:
      - "8088:8080"
    volumes:
      - ./conf/e3w/config.ini:/app/conf/config.default.ini
    networks:
      - pg-network

  pg-user-service:
    depends_on:
      - etcd1
      - etcd2
      - etcd3
      - pg-user-db
    build: ./user
    environment:
      MICRO_SERVER_ADDRESS: ":9091"
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
      DB_HOST: "laracom-user-db:3306"
      DB_DATABASE: ${USER_DB_DATABASE}
      DB_USER: ${USER_DB_USER}
      DB_PASSWORD: ${USER_DB_PASSWORD}
    ports:
      - 9092:9091
    volumes:
      - ./user:/app
    networks:
      - pg-network

  pg-user-db:
    image: mysql:latest
    ports:
      - ${USER_DB_PORT}:3306
    volumes:
      - db_user_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_USER: ${USER_DB_USER}
      MYSQL_PASSWORD: ${USER_DB_PASSWORD}
      MYSQL_DATABASE: ${USER_DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${USER_DB_ROOT_PASSWORD}
    networks:
      - pg-network

# 卷標，需要docker volume inspect 查看
volumes:
  db_user_data: {}

networks:
  pg-network:
    external: true
